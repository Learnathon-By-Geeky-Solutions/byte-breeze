plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.3' // Updated to the latest version
	id 'io.spring.dependency-management' version '1.1.7' // Updated to the latest version
	id 'com.diffplug.spotless' version '6.25.0'
	id "org.sonarqube" version "6.0.1.5171"
	id 'jacoco' // Ensure JaCoCo plugin is applied
}

group = 'com.bytebreeze'
version = '1.2.0-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'nz.net.ultraq.thymeleaf:thymeleaf-layout-dialect:3.1.0'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity6'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'org.postgresql:postgresql'

	// Flyway for database migration
	implementation 'org.flywaydb:flyway-core'
	implementation 'org.flywaydb:flyway-database-postgresql'

	// Lombok for boilerplate code generation
	compileOnly 'org.projectlombok:lombok:1.18.30'
	annotationProcessor 'org.projectlombok:lombok:1.18.30'

	// for validation
	implementation 'org.springframework.boot:spring-boot-starter-validation'

	// Provide common library for java like 'RateLimiter'
	implementation 'com.google.guava:guava:33.4.0-jre'

	// MapStruct is a mapping code generation tool between different object types
	implementation 'org.mapstruct:mapstruct:1.5.5.Final'
	annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.5.Final'

	// ModelMapper for entity and dto mapping
	implementation 'org.modelmapper:modelmapper:3.2.2'

	// for working with filenames and file paths, file extension
	implementation 'commons-io:commons-io:2.13.0'

	// H2 database dependencies for testing
	testImplementation 'com.h2database:h2:2.3.232'

	// OpenTelemetry
	implementation 'io.micrometer:micrometer-tracing-bridge-otel'
	implementation 'io.opentelemetry:opentelemetry-exporter-otlp'

	// Promethues
	implementation 'io.micrometer:micrometer-registry-prometheus'

	// Loki log appender
	implementation 'com.github.loki4j:loki-logback-appender:1.6.0'
}

sonarqube {
	properties {
		property "sonar.projectKey", "Learnathon-By-Geeky-Solutions_byte-breeze"
		property "sonar.organization", "learnathon-by-geeky-solutions"
		property "sonar.host.url", System.getenv("SONAR_HOST_URL") ?: "https://sonarcloud.io"
		property "sonar.token", System.getenv("SONARCLOUD_TOKEN")
		property "sonar.sources", "src/main/java"
		property "sonar.tests", "src/test/java"
		property "sonar.java.binaries", "build/classes/java/main"
		property "sonar.coverage.jacoco.xmlReportPaths", "build/reports/jacoco/test/jacocoTestReport.xml"
		property "sonar.coverage.exclusions", "**/com/bytebreeze/quickdrop/config/**, **/com/bytebreeze/quickdrop/dto/**, **/com/bytebreeze/quickdrop/enums/**, **/com/bytebreeze/quickdrop/exception/**, **/com/bytebreeze/quickdrop/mapper/**, **/com/bytebreeze/quickdrop/entity/**, **/com/bytebreeze/quickdrop/security/**"
	}
}

tasks.named('test') {
	useJUnitPlatform()
	finalizedBy tasks.named('jacocoTestReport')
}

spotless {
	java {
		target 'src/**/*.java'
		palantirJavaFormat()
		indentWithTabs(4)
		removeUnusedImports()
		trimTrailingWhitespace()
		endWithNewline()
	}
}

tasks.withType(JavaCompile).configureEach {task -> {
	task.dependsOn "spotlessApply"
}}

jacoco {
	toolVersion = "0.8.10"
}

jacocoTestReport {
	dependsOn tasks.named('test')
	reports {
		xml.required = true
		html.required = true
	}

	afterEvaluate {
		classDirectories.setFrom(files(classDirectories.files.collect {
			fileTree(dir: it,
					exclude: [
							'**/com/bytebreeze/quickdrop/config/**',
							'**/com/bytebreeze/quickdrop/dto/**',
							'**/com/bytebreeze/quickdrop/enums/**',
							'**/com/bytebreeze/quickdrop/exception/**',
							'**/com/bytebreeze/quickdrop/mapper/**',
							'**/com/bytebreeze/quickdrop/entity/**',
							'**/com/bytebreeze/quickdrop/security/**'
					])
		}))
	}
}
